<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<bean id="propertyConfigurer" 
      class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>/WEB-INF/hibernate.properties</value>
		</property>
	</bean>
	
	
	<!-- note: dataSource bean is in the instance specific dao config files -->
	

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="localDataSource"/>
		</property>
	
		<property name="eventListeners">
			<map>
				<entry key="post-insert"><ref bean="auditHibernateListener"/></entry>
				<entry key="post-update"><ref bean="auditHibernateListener"/></entry>
				<entry key="post-delete"><ref bean="auditHibernateListener"/></entry>
				<entry key="post-load"><ref bean="auditHibernateListener"/></entry>
			</map>
		</property>
	    <property name="hibernateProperties">
    	  <props>
        	<prop key="hibernate.dialect">${hibernate.dialect}</prop>
          	<prop key="hibernate.transaction.manager_lookup_class">${hibernate.transaction.manager_lookup_class}</prop>
          	<prop key="hibernate.transaction.factory_class">${hibernate.transaction.factory_class}</prop>
     	  </props>
    	</property>
    	<property name="configurationClass"><value>edu.ucsf.lava.core.dao.hibernate.LavaConfiguration</value></property>
    	<property name="mappingDirectoryLocations">
    	  		<list>
    	  			<value>WEB-INF/hibernate/</value>
    			</list>
    	</property>
    </bean>
	
	<bean id="auditHibernateListener" class="edu.ucsf.lava.core.audit.AuditHibernateListener"/>
	
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <!-- this setting is J2EE-server specific. this is the JBoss setting
             see JtaTransactionManager API for more info -->
    	<property name="transactionManagerName">
    		<value>java:/TransactionManager</value>
    	</property>
    	<!-- the typical default for JTA providers is 30 seconds. can set to a very large
    		value like 100000 for debugging purposes -->
    	<property name="defaultTimeout">
    		<value>90</value>
    	</property>
    </bean>
    
    
	<bean id="transactionAttributeSource" 
	   class="org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource">
		<property name="transactionAttribute">
	   		<ref bean="transactionAttribute"/>
	   	</property>
   </bean>

	<bean id="transactionAttribute" 
	   class="org.springframework.transaction.interceptor.DefaultTransactionAttribute">
	    <!-- PROPAGATION_REQUIRED means the Java Transaction API (JTA) manages transactions
	         with request granularity, i.e. spanning all service calls during the request,
	         where each service call participates in the same existing transation. 
	         PROPAGATION_REQUIRES_NEW means per-service method granularity -->
		<property name="propagationBehaviorName">
			<value>PROPAGATION_REQUIRED</value> 
		</property>
		<property name="isolationLevelName">
			<value>ISOLATION_DEFAULT</value>
		</property>
   </bean>
   
    <bean id="abstractTransactionProxy" abstract="true" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="transactionAttributeSource">
			<ref bean="transactionAttributeSource"/>
		</property>			
	</bean>

   <bean id="lavaDao" parent="abstractTransactionProxy">
    	<property name="target">
			<bean id="lavaDaoImpl" class="edu.ucsf.lava.core.dao.hibernate.LavaDaoHibernateImpl">
				<property name="sessionFactory">
					<ref bean="sessionFactory"/>
				</property>
			</bean>
		</property>			
	</bean>
   
    
    

    
   
   
</beans>
		
		