<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
	
	<!-- the instrument manager bean -->
	<bean id="instrumentManager" class="edu.ucsf.lava.crms.assessment.InstrumentManager" >
		<property name="instrumentDefinitions">
			<ref bean="instrumentDefinitions"/>
		</property>  
		<property name="instrumentPrototypes">
					<bean class="edu.ucsf.lava.core.spring.MapMerger">
	    				<constructor-arg><map>
     						<entry key="crmsInstrumentPrototypes"><ref bean="crmsInstrumentPrototypes"/></entry>
		     				<entry key="localInstrumentPrototypes"><ref bean="localInstrumentPrototypes"/></entry>
			     	</map></constructor-arg>
					</bean>
		</property>  			
		<!-- refactor into a self-registering bean collection -->
		<property name="projectInstrumentVerifyRates">
			<bean class="edu.ucsf.lava.core.spring.MapMerger">
   				<constructor-arg><map>
   					<!-- a Project-Instrument:Verify Rate map injected into the instrumentHandler -->
					<entry key="crmsProjectInstrumentVerifyRates"><ref bean="crmsProjectInstrumentVerifyRates"/></entry>
    				<entry key="localProjectInstrumentVerifyRates"><ref bean="localProjectInstrumentVerifyRates"/></entry>
		     	</map></constructor-arg>
			</bean>
		</property>     		
	</bean>
	
	
    <bean id="abstractInstrumentPrototype" abstract="true" class="edu.ucsf.lava.crms.assessment.model.Instrument">
   		<constructor-arg index="0"><null/></constructor-arg>
   		<constructor-arg index="1"><null/></constructor-arg>
   		<constructor-arg index="2"><null/></constructor-arg>
   		<constructor-arg index="3"><null/></constructor-arg>
   		<constructor-arg index="4"><null/></constructor-arg>
   		<constructor-arg index="5"><null/></constructor-arg>
   	</bean>
   	
   	<!-- refactor into a self-registering collection bean -->
      <!--  a ProjectName-Visittype:Instrument bean map injected into the assessmentService -->
   	<bean id="crmsInstrumentPrototypes" class="java.util.LinkedHashMap">
		<constructor-arg><map>	
		</map></constructor-arg>
	</bean>	
	
		
	
	
	<!-- actions -->

	<!-- TODO: redesign so that the uds actions defined in lava-crms-nacc are configured in that project. for now,
		a non-UDS app gives error messages in the log file on startup but no runtime damage -->	
	<bean id="baseInstrumentFlowAction" abstract="true" parent="crmsAction">
		<property name="flowTypeBuilder"><ref bean="crmsInstrumentFlowTypeBuilder"/></property>
		<property name="subFlows"><list>
			<value>lava.crms.assessment.attachments.assessmentAttachment</value>
		</list></property>	
		<property name="parentFlows"><list>
			<value>lava.crms.assessment.instrument.instrumentGroup</value>
			<value>lava.crms.assessment.summary.patientInstruments</value>
			<value>lava.crms.assessment.summary.projectInstruments</value>
			<value>lava.crms.scheduling.visit.visitInstruments</value>
			<value>lava.crms.assessment.uds.patientUdsInstruments</value>
			<value>lava.crms.assessment.uds.projectUdsInstruments</value>
			<value>lava.crms.assessment.uds.patientUdsSubmissions</value>
			<value>lava.crms.assessment.uds.projectUdsSubmissions</value>
			<value>lava.crms.protocol.assignment.protocol</value>
			<value>lava.crms.protocol.assignment.protocolTimepoint</value>
			<value>lava.crms.protocol.assignment.protocolVisit</value>
			<value>lava.crms.protocol.assignment.protocolInstrument</value>
			<value>lava.crms.protocol.scheduling.projectSchedulingStatus</value>
			<value>lava.crms.protocol.scheduling.patientSchedulingStatus</value>
			<value>lava.crms.protocol.collection.projectCollectionStatus</value>
			<value>lava.crms.protocol.collection.patientCollectionStatus</value>
			<value>lava.crms.protocol.completion.projectCompletionStatus</value>
			<value>lava.crms.protocol.completion.patientCompletionStatus</value>
			<value>lava.crms.protocol.deviation.projectDeviationStatus</value>
			<value>lava.crms.protocol.deviation.patientDeviationStatus</value>
		</list></property>
	</bean>
	<bean id="crmsInstrumentFlowAction" abstract="true" parent="baseInstrumentFlowAction"/>
	
	<bean id="crmsInstrumentGroupFlowAction" abstract="true" parent="crmsAction">
		<property name="flowTypeBuilder"><ref bean="crmsInstrumentGroupFlowTypeBuilder"/></property>
	</bean>
	
	<bean id="baseInstrumentListFlowAction" abstract="true" parent="crmsAction">
		<property name="flowTypeBuilder"><ref bean="crmsInstrumentListFlowTypeBuilder"/></property>
		<property name="subFlows"><list>
			<value>lava.crms.assessment.instrument.instrumentGroup</value>
		</list></property>
	</bean>
	<bean id="crmsInstrumentListFlowAction" abstract="true" parent="baseInstrumentListFlowAction"/>
	
	<!-- Parent beans that define default actions for instrument list entities -->
	<bean id="crmsSectionInstrumentListAction" abstract="true" parent="crmsInstrumentListFlowAction">
			<property name="sectionDefault" value="true"/>
	</bean>
	<bean id="crmsPatientSectionInstrumentListAction" abstract="true" parent="crmsInstrumentListFlowAction">
			<property name="patientSectionDefault" value="true"/>
	</bean>
	<bean id="crmsModuleInstrumentListAction" abstract="true" parent="crmsInstrumentListFlowAction">
			<property name="moduleDefault" value="true"/>
			<property name="sectionDefault" value="true"/>
	</bean>
	<bean id="crmsPatientModuleInstrumentListAction"  abstract="true" parent="crmsInstrumentListFlowAction">
			<property name="patientModuleDefault" value="true"/>
			<property name="patientSectionDefault" value="true"/>
	</bean>
		
	<bean id="lava.crms.assessment.summary.patientInstruments" parent="crmsPatientModuleInstrumentListAction"/>
	<bean id="lava.crms.assessment.summary.projectInstruments" parent="crmsModuleInstrumentListAction"/>
				
			
	
	<!-- action for adding an instrument where the type of instrument to add is not known ahead of time -->
	<bean id="lava.crms.assessment.instrument.instrument" parent="crmsInstrumentFlowAction"/>
	
	<bean id="lava.crms.assessment.instrument.instrumentGroup" parent="crmsInstrumentGroupFlowAction"/>				

	
	 <!-- form action definitions -->
    
    <bean id="baseEntityInstrumentHandler" class="edu.ucsf.lava.crms.assessment.controller.InstrumentHandler" parent="crmsHandler" abstract="true">
    	<constructor-arg><map>
      			<!-- key is instrTypeEncoded, i.e. lowercase, with "FileLoader" appended -->
		</map></constructor-arg>
	</bean>		
	
   	<bean id="crmsProjectInstrumentVerifyRates" class="java.util.LinkedHashMap">
		<constructor-arg><map>	
		</map></constructor-arg>
	</bean>	
	
	
	<bean id="crmsInstrumentComponentFormAction" abstract="true" parent="crmsEntityComponentFormAction"
		class="edu.ucsf.lava.crms.assessment.controller.InstrumentComponentFormAction">
	</bean>
	
	<bean id="visitInstrumentsFormAction" parent="crmsListComponentFormAction"><constructor-arg><list>
		<bean class="edu.ucsf.lava.crms.assessment.controller.VisitInstrumentsHandler" parent="crmsHandler"/>
		<ref bean="instrumentGroupHandler"/>
	</list></constructor-arg></bean>  

	<bean id="patientInstrumentsFormAction" parent="crmsListComponentFormAction">
    	<constructor-arg><list><bean class="edu.ucsf.lava.crms.assessment.controller.PatientInstrumentsHandler" parent="crmsHandler"/></list></constructor-arg>
	</bean>  
	
	<bean id="projectInstrumentsFormAction" parent="crmsListComponentFormAction">
    	<constructor-arg><list><bean class="edu.ucsf.lava.crms.assessment.controller.ProjectInstrumentsHandler" parent="crmsHandler"/></list></constructor-arg>
	</bean>  

	<!-- used for adding instruments of any type -->
	<bean id="instrumentFormAction" parent="crmsInstrumentComponentFormAction">
    	<constructor-arg>
    		<list>
      			<bean parent="baseEntityInstrumentHandler"/>
	      		<bean class="edu.ucsf.lava.crms.assessment.controller.VisitInstrumentsHandler" parent="crmsHandler"/>
      		</list>
   		</constructor-arg>
    </bean>

	<bean id="baseInstrumentGroupHandler" class="edu.ucsf.lava.crms.assessment.controller.InstrumentGroupHandler" parent="crmsHandler">
		<property name="groupPrototypes">
			<!-- refactor into a self-registering bean collection -->
			<bean class="edu.ucsf.lava.core.spring.MapMerger">
   				<constructor-arg><map>
					<entry key="crmsInstrumentGroupPrototypes"><ref bean="crmsInstrumentGroupPrototypes"/></entry>
    				<entry key="localInstrumentGroupPrototypes"><ref bean="localInstrumentGroupPrototypes"/></entry>
		     	</map></constructor-arg>
			</bean>
		</property>     		
	</bean>
	<bean id="instrumentGroupHandler" parent="baseInstrumentGroupHandler"/>

   	<bean id="crmsInstrumentGroupPrototypes" class="java.util.LinkedHashMap">
		<constructor-arg><map>	
		</map></constructor-arg>
	</bean>	
	
	<bean id="instrumentGroupFormAction" parent="crmsEntityComponentFormAction">
		<constructor-arg><bean parent="instrumentGroupHandler"/></constructor-arg>
	</bean>


	<bean id="instrumentFileLoader" abstract="true">
    	<property name="assessmentService">
    		<ref bean="assessmentService"/>
   		</property>
    	<property name="sessionService">
    		<ref bean="sessionService"/>
   		</property>
	</bean>   		    
		
	
	<!-- standard controllers (not webflow) -->
	<bean id="instrCalcController" class="edu.ucsf.lava.crms.assessment.controller.CalculateController"/>
	
	
	
		
	<!-- InstrumentConfig is a structure to indicate which instruments have been implemented in the application and additional
	         instrument configuration data. the instrument key used must be that returned by getInstrTypeEncoded defined 
	         in edu.ucsf.memory.lava.model.Instrument
	   
	   		 properties:
	   		 "className" = fully qualified Java class name for the instrument
	   		 
	   		 "supportedFlows" = comma-separated list of flows. possible flows:
	   		 					"enter" is data entry, possibly followed by verify (double enter), followed by edit status
	   		 					"enterReview" is data entry followed by review (readonly) possibly followed by verify (double enter)
	   		 						followed by edit status
	   		 					"upload" is file upload followed by review followed by edit status
	 							note: until all instruments can be printed, temporarily also use "print" as a supported flow for
                                those instruments that can be printed
                                
                                ** "enter" and "enterReview" are mutually exclusive so only one of them can be supported
                 
			 "verify" = true|false
			            instrument supports verify via double entry (defaults to true)
	         			note: if an instrument supports verify then a) it will have a verify action button ("Double Entry")
	         			to allow the user to verify whenever they want, and b) a configured verify rate (configured in the 
	         			projectInstrumentVerifyRates bean) will determine whether verify is mandatory some percentage of the time
	         			
			 "hidden" = true|false (default: false)
			 			the instrument will not be listed anywhere. intended for instruments that are stored in the instrument
			 			tables but are not implemented in this application, e.g. instruments whose data is uploaded from data
			 			files for analysis by an application that interfaces with the instrument tables, such as Lava Query 
                        ** requires also defining the "instrType" property with full instrument name (i.e. not instrTypeEncoded)                                 
         				
			 "diagnosis" = true|false (default: false)
			               flags the instrument as a diagnosis, which can then be used at will if a distinction is needed  
	                       ** requires also defining the "instrType" property with full instrument name (i.e. not 
	                       instrTypeEncoded), so that a persistent property is available to use in queries 						         					
	         -->
	
	
	<bean id="instrumentDefinitions" class="edu.ucsf.lava.crms.assessment.InstrumentDefinitions"/>
	
	
	
	<bean id="instrumentConfig" abstract="true" class="edu.ucsf.lava.crms.assessment.model.InstrumentConfig">
		<property name="instrumentDefinitions"><ref bean="instrumentDefinitions"/></property>
	</bean>
	
	<!-- this post processor sets the InstrTypeEncoded == bean id and adds config to the instrument definitions loaded
	     into the instrument manager -->
	<bean id="instrumentConfigBeanPostProcessor" class="edu.ucsf.lava.crms.assessment.model.InstrumentConfigBeanPostProcessor"/>

    <bean id="instrumentTracking" parent="instrumentConfig">
			<!-- for lightweight instrument objects when do not need to know the specific type, e.g. instrument listing,
			e.g. adding a new instrument where the instrType is not known yet but formBackingObject must exist -->
			<property name="className"><value>edu.ucsf.lava.crms.assessment.model.InstrumentTracking</value></property>
			<property name="supportedFlows"><value></value></property>
	 </bean>		 			
	 	 				
		
</beans>

	
	   
   