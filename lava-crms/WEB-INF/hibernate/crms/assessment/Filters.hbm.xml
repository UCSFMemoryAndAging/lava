<?xml version="1.0"?>
    
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
    
<hibernate-mapping>

<!-- authorization-based filters
note that these filters just ensure that a user has a role in a given projectUnit. additional filtering
may be needed using the authorizationService to ensure that the user has permissions in a given projectUnit -->
<filter-def name="projectAuth">
    <filter-param name="projectList" type="string"/>
     ProjName in (:projectList)
</filter-def>
<filter-def name="patientAuth">
    <filter-param name="projectList" type="string"/>
    PIDN in (select e.PIDN from enrollmentstatus e where e.PIDN=PIDN and e.ProjName in (:projectList))
</filter-def>

<!-- use this filter to ensure an entity that uses PIDN indeed has an entry in the patient table AND not inactive (not "soft deleted") -->
<filter-def name="validPatient">
    PIDN in (select p.PIDN from patient p where p.PIDN=PIDN and p.InactiveDate IS NULL)
</filter-def>

<!-- alternative: use this simpler filter to avoid the extra join (performance) or concern about obscuring orphan records (integrity)
<filter-def name="validPatient">
    PIDN > 0
</filter-def>
-->

<!-- user-defined context filters -->
<filter-def name="projectContext">
    <filter-param name="projectContext" type="string"/>
</filter-def>
<filter-def name="patient">
    <filter-param name="patientId" type="long"/>
</filter-def>

</hibernate-mapping>