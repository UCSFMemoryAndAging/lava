<?xml version="1.0"?> 

<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"
    [<!ENTITY protocolInclude SYSTEM "classpath://../hibernate/crms/protocol/protocolInclude.xml" >
     <!ENTITY protocolFilterInclude SYSTEM "classpath://../hibernate/crms/protocol/protocolFilterInclude.xml" >]>
     
<hibernate-mapping>

<class name="edu.ucsf.lava.crms.protocol.model.ProtocolBase" table="prot_node" select-before-update="true">

	&protocolInclude;
	
	<many-to-one name="protocolConfigBase" column="config_node_id" class="edu.ucsf.lava.crms.protocol.model.ProtocolConfigBase" lazy="false"/>	
	
	<!-- timepoints collection is a bilateral relationship with parent association mapped in ProtocolTimepointBase -->
	<!-- note about ordering: when the Protocol Configuration is assigned to a Patient to create a Protocol, the ordering
		of timepoints in the configuration is maintained by transferring the value of the list_order column for each timepoint. 
		this is preferable to ordering on ProtocolTimepoint schedAnchorDate (via compareTo method) because a timepoint
		will not have a schedAnchorDate until its primary visit is a assigned. -->
	<set name="protocolTimepointsBase" table="prot_node" inverse="true" cascade="all,delete-orphan" order-by="list_order" lazy="true">
		<key column="parent_id"/>
		<one-to-many class="edu.ucsf.lava.crms.protocol.model.ProtocolTimepointBase"/> 
	</set>
	
	&protocolFilterInclude;
	
</class>	
	
		
</hibernate-mapping>

